import {selectors} from "../selectors/selectors";
import {notifications} from "../selectors/notifications";

describe('tests for notification', () => {

    beforeEach("signin", () => {
        cy.visit('/')
        cy.intercept('POST', '/login').as('login')
        cy.intercept('POST', '/graphql').as('graphql')
        cy.intercept('GET', '/notifications').as('notifications')
        cy.intercept('GET', '/users').as('users')
        cy.intercept('POST', '/transactions').as('transactions')
        cy.intercept('GET', '/checkAuth').as('checkAuth')
        cy.intercept('POST', '/likes/*').as('like')
        cy.intercept('POST', '/logout').as('logout')
        cy.intercept('GET', '/transactions').as('transaction')
    })

    it('transactions navigation tabs should be hidden on a transaction view page', () => {
        cy.loginByApi("Tavares_Barrows", "s3cret")
        cy.wait('@login')
        cy.wait('@graphql')
        cy.wait('@notifications')
        cy.get(notifications.transactionList).first().click()
        cy.get(selectors.btnEveryone).should("not.exist")
        cy.get(selectors.btnFriends).should("not.exist")
        cy.get(selectors.btnMine).should("not.exist")
        cy.logoutApi()
        cy.wait('@logout')
    })

    it('User should be able to like a transaction', () => {
        cy.loginByApi("Tavares_Barrows", "s3cret")
        cy.wait('@login')
        cy.wait('@graphql')
        cy.wait('@notifications')
        cy.get(selectors.btnCreateNewTransaction).click()
        cy.wait('@users')
        cy.get(selectors.transactionList).should("be.visible").contains('Kaylin Homenick').click()
        cy.get(selectors.amountField).type('500')
        cy.get(selectors.addANoteField).type('Money')
        cy.get(selectors.requestBtn).click()
        cy.wait('@transactions')
        cy.logoutApi()
        cy.wait('@logout')
        cy.loginByApi("Katharina_Bernier", "s3cret")
        cy.wait('@login')
        cy.wait('@graphql')
        cy.wait('@notifications')
        cy.get(notifications.transactionList).first().click()
        cy.get(notifications.likeButton).click()
        cy.wait('@like')
        cy.logoutApi()
        cy.wait('@logout')
    })

    it('User should be able to comment on a transaction', () => {
        cy.loginByApi("Tavares_Barrows", "s3cret")
        cy.wait('@login')
        cy.wait('@graphql')
        cy.wait('@notifications')
        cy.get(selectors.btnCreateNewTransaction).click()
        cy.wait('@users')
        cy.get(selectors.transactionList).should("be.visible").contains('Kaylin Homenick').click()
        cy.get(selectors.amountField).type('500')
        cy.get(selectors.addANoteField).type('Money')
        cy.get(selectors.requestBtn).click()
        cy.wait('@transactions')
        cy.logoutApi()
        cy.wait('@logout')
        cy.loginByApi("Katharina_Bernier", "s3cret")
        cy.wait('@login')
        cy.wait('@graphql')
        cy.wait('@notifications')
        cy.get(notifications.transactionList).first().click()
        cy.get(notifications.commentField).type('some text').type('{enter}')
        cy.logoutApi()
        cy.wait('@logout')
    })

    it('User should be able to accept a transaction request', () => {
        cy.loginByApi("Tavares_Barrows", "s3cret")
        cy.wait('@login')
        cy.wait('@graphql')
        cy.wait('@notifications')
        cy.get(selectors.btnCreateNewTransaction).click()
        cy.wait('@users')
        cy.get(selectors.transactionList).should("be.visible").contains('Kaylin Homenick').click()
        cy.get(selectors.amountField).type('500')
        cy.get(selectors.addANoteField).type('Money')
        cy.get(selectors.requestBtn).click()
        cy.wait('@transactions')
        cy.logoutApi()
        cy.wait('@logout')
        cy.loginByApi("Allie2", "s3cret")
        cy.wait('@login')
        cy.wait('@graphql')
        cy.wait('@notifications')
        cy.get(notifications.transactionList).first().click()
        cy.get(selectors.acceptRequestBtn).click({ force: true })
        cy.logoutApi()
        cy.wait('@logout')
    })

    it('User should be able to reject a transaction request', () => {
        cy.loginByApi("Tavares_Barrows", "s3cret")
        cy.wait('@login')
        cy.wait('@graphql')
        cy.wait('@notifications')
        cy.get(selectors.btnCreateNewTransaction).click()
        cy.wait('@users')
        cy.get(selectors.transactionList).should("be.visible").contains('Kaylin Homenick').click()
        cy.get(selectors.amountField).type('500')
        cy.get(selectors.addANoteField).type('Money')
        cy.get(selectors.requestBtn).click()
        cy.wait('@transactions')
        cy.logoutApi()
        cy.wait('@logout')
        cy.loginByApi("Allie2", "s3cret")
        cy.wait('@login')
        cy.wait('@graphql')
        cy.wait('@notifications')
        cy.get(notifications.transactionList).first().click()
        cy.get(selectors.rejectBtn).click({ force: true })
        cy.logoutApi()
        cy.wait('@logout')
    })

    it('Accept/reject buttons shouldn`t exist on completed request', () => {
        cy.loginByApi("Tavares_Barrows", "s3cret")
        cy.wait('@login')
        cy.wait('@graphql')
        cy.wait('@notifications')
        cy.get(selectors.btnCreateNewTransaction).click()
        cy.wait('@users')
        cy.get(selectors.transactionList).should("be.visible").contains('Kaylin Homenick').click()
        cy.get(selectors.amountField).type('500')
        cy.get(selectors.addANoteField).type('Money')
        cy.get(selectors.requestBtn).click()
        cy.wait('@transactions')
        cy.logoutApi()
        cy.wait('@logout')

        cy.loginByApi("Allie2", "s3cret")
        cy.wait('@login')
        cy.wait('@graphql')
        cy.wait('@notifications')
        cy.get(notifications.transactionList).first().click()
        cy.get(selectors.acceptRequestBtn).should("be.enabled")
        cy.get(selectors.rejectBtn).should("be.enabled")
        cy.get(selectors.rejectBtn).click({ force: true })
        cy.get(selectors.acceptRequestBtn).should("not.exist")
        cy.get(selectors.rejectBtn).should("not.exist")
        cy.logoutApi()
        cy.wait('@logout')
    })
})